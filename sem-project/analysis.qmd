---
title: "Reproducing Montano-Centellas et al. (2020)"
author: Karthik Thrikkadeeri
toc: true
number-sections: false
embed-resources: true
bibliography: ../PhD.json
theme: sandstone
format: html
execute:
  warning: false
editor_options: 
  chunk_output_type: console
---

```{r}
library(dplyr)
library(readxl) # file is .xlsx
library(glue)
library(ggplot2); theme_set(theme_classic())
library(purrr)

# colour palette to match that used in paper
scale_col_pal <- scale_color_brewer(palette = "Dark2")

data_dryad <- read_xlsx("data/montano_dryad_data.xlsx",
                        sheet = "FDPD_Supporting")

```

[Appendix S2](https://onlinelibrary.wiley.com/action/downloadSupplement?doi=10.1111%2Fgeb.13021&file=geb13021-sup-0001-Supinfo.pdf) available online.

## What are the diversity patterns? (Quadratic regressions)

### Fitting the models

The polynomial model is fit to each mountain separately, so need to iterate. We also need to predict responses across the elevations.

```{r}

# iterate over each mountain in the dataset:
# fit LM of each metric against linear and second-order polynomial terms of Elevation
# extract intercept and coefficients for both Elevation terms
# aggregate all these values over all mountains

list_mount <- unique(data_dryad$Mountain)
metric_cols <- c("FRic", "FDis", "PD", "MPD")
to_iter <- expand.grid(mountain = list_mount, metric = metric_cols)

quad_reg <- map2(to_iter$mountain, to_iter$metric, ~ {
  
  data_mount <- data_dryad %>% filter(Mountain == .x)
  model_formula <- as.formula(glue("{.y} ~ elevation + I(elevation^2)"))
  model_mount <- lm(model_formula, data_mount)
  
  # predict only for elevations present in each mountain
  to_pred <- data_mount %>% distinct(Mountain, elevation)
  # predict
  model_pred <- predict(model_mount, newdata = to_pred, type = "response")
  pred <- bind_cols(to_pred, pred = model_pred)

  t(model_mount$coefficients) %>% 
    as_tibble() %>% 
    magrittr::set_colnames(c("intercept", "coef_linear", "coef_poly")) %>% 
    bind_cols(tibble(mountain = .x, metric = .y)) %>% 
    left_join(pred, by = c("mountain" = "Mountain"))
  
}) %>% 
  list_rbind() %>% 
  relocate(metric, mountain) # bring metric and mountain cols to the start

```

### Plotting predicted elevational patterns

Once we have the predictions, we need to plot them and inspect the patterns.

```{r}
#| fig-asp: 1.5

quad_reg %>% 
  ggplot(aes(x = elevation, y = pred, col = mountain)) +
  geom_line() +
  facet_wrap(~ metric, ncol = 1, scales = "free_y", strip.position = "left") + 
  labs(x = "Elevation", y = "") +
  # scale_col_pal + # only makes sense to colour scheme after classifying into 8 categs
  theme(panel.grid.major.x = element_line(colour = "grey", linetype = "dotted"),
        # match strip format in paper
        strip.background = element_rect(colour = NA),
        strip.placement = "outside",
        strip.text = element_text(size = 10),
        # remove colour key
        legend.position = "none") 

```

